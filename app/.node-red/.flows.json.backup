[
    {
        "id": "137a9152.2c26cf",
        "type": "tab",
        "label": "Hardware",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5c46ad63.1c5eb4",
        "type": "tab",
        "label": "Consumables",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b7b775e0.9589b8",
        "type": "tab",
        "label": "Employees",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d4e82a1.6b341c",
        "type": "tab",
        "label": "Liveview",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6b628289.79f0ac",
        "type": "subflow",
        "name": "humanity",
        "info": "",
        "in": [
            {
                "x": 72.00000381469727,
                "y": 68.00000381469727,
                "wires": [
                    {
                        "id": "a2287ef.3c7478"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "8c5fc8f9.567368",
        "type": "json-db-collection",
        "z": "",
        "name": "assets",
        "collection": "assets",
        "save": true
    },
    {
        "id": "2d25d467.3a0ffc",
        "type": "ibmiot",
        "z": "",
        "name": "iot-server",
        "keepalive": "60",
        "serverName": "8f83wm.messaging.internetofthings.ibmcloud.com",
        "cleansession": true,
        "appId": "",
        "shared": false
    },
    {
        "id": "a56be3a0.bbc3e",
        "type": "websocket-listener",
        "path": "/ws/location",
        "wholemsg": "false"
    },
    {
        "id": "8ab126de.c9de68",
        "type": "cloudant",
        "z": "",
        "host": "http://74.194.202.74:8085",
        "name": "localhost"
    },
    {
        "id": "a2287ef.3c7478",
        "type": "function",
        "z": "6b628289.79f0ac",
        "name": "",
        "func": "msg.headers = {}\nlet config = {\n   client_id: '1de720f9636d0f17d61540fbd9c030c30fae3f1f',\n   client_secret: '33c1bfc4f96d5ca7e68b859af8d58fde36867bbd',\n   grant_type: 'password',\n   username: 'ash@andrewscarpetcleaning.com',\n   password: 'sugarlips42'\n}\nmsg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\nmsg.payload = config\nmsg.redirect = false\nconsole.log(msg)\nreturn msg;\n\n// url string\n// If not configured in the node, this optional property sets the url of the request.\n// method string\n// If not configured in the node, this optional property sets the HTTP method of the request. Must be one of GET, PUT, POST, PATCH or DELETE.\n// headers object\n// Sets the HTTP headers of the request.\n// cookies object\n// If set, can be used to send cookies with the request.\n// payload\n// Sent as the body of the request.\n// rejectUnauthorized\n// If set to false, allows requests to be made to https sites that use self signed certificates.\n// followRedirects",
        "outputs": 1,
        "noerr": 0,
        "x": 207.18058395385742,
        "y": 66.65971374511719,
        "wires": [
            [
                "e8bf1739.737218"
            ]
        ]
    },
    {
        "id": "e8bf1739.737218",
        "type": "http request",
        "z": "6b628289.79f0ac",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "https://www.humanity.com/oauth2/token.php",
        "tls": "",
        "x": 372.1875915527344,
        "y": 67.7152910232544,
        "wires": [
            [
                "113e2666.ace95a",
                "f7cd729f.4f457"
            ]
        ]
    },
    {
        "id": "113e2666.ace95a",
        "type": "function",
        "z": "6b628289.79f0ac",
        "name": "",
        "func": "console.log(msg)\nconst _token = JSON.parse(msg.payload)\nconst humanity = {\n    token: _token['access_token']\n}\nglobal.set('humanity', humanity)\nmsg.token = humanity.token\nconsole.log(global.get('humanity').token)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 531.1805391311646,
        "y": 67.55556869506836,
        "wires": [
            []
        ]
    },
    {
        "id": "f7cd729f.4f457",
        "type": "debug",
        "z": "6b628289.79f0ac",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 534.1944732666016,
        "y": 106.52083587646484,
        "wires": []
    },
    {
        "id": "6edfa716.7635e8",
        "type": "http request",
        "z": "6b628289.79f0ac",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "https://www.humanity.com/api/v2/companies/135324?access_token={{{token}}}",
        "tls": "",
        "x": 118.18056106567383,
        "y": 157.7187442779541,
        "wires": [
            [
                "cd23e99a.170058"
            ]
        ]
    },
    {
        "id": "cd23e99a.170058",
        "type": "function",
        "z": "6b628289.79f0ac",
        "name": "",
        "func": "const staff = JSON.parse(msg.payload).staff\nglobal.set('humanity_staff', staff)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 286.1909942626953,
        "y": 157.44098663330078,
        "wires": [
            []
        ]
    },
    {
        "id": "eaa1acff.7e5f4",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "time clocks",
        "method": "GET",
        "ret": "obj",
        "url": "https://www.humanity.com/api/v2/timeclocks?start_date={{{start_date}}}&employee={{{payload.humanityid}}}&access_token={{{token}}}",
        "tls": "",
        "x": 590,
        "y": 540,
        "wires": [
            [
                "3aeb169d.ac343a"
            ]
        ]
    },
    {
        "id": "44532437.4d6efc",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/employees/timeclocks/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 188.1944465637207,
        "y": 539.784722328186,
        "wires": [
            [
                "b20be952.a99428"
            ]
        ]
    },
    {
        "id": "b20be952.a99428",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "\nvar start_date = msg.payload.start_date\nmsg.start_date = start_date\n\nmsg.headers = {}\nmsg.token = global.get('humanity').token\nmsg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\nmsg.redirect = false\nmsg.payload = global.get(msg.payload.username)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "eaa1acff.7e5f4"
            ]
        ]
    },
    {
        "id": "bcdc20a8.2cd35",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "3aeb169d.ac343a",
        "type": "change",
        "z": "b7b775e0.9589b8",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "bcdc20a8.2cd35"
            ]
        ]
    },
    {
        "id": "17a92fcc.3de4e",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "time clocks",
        "method": "GET",
        "ret": "obj",
        "url": "http://www.humanity.com/api/v2/timeclocks/status/{{{payload.humanityid}}}/0?access_token={{{token}}}",
        "tls": "",
        "x": 590,
        "y": 580,
        "wires": [
            [
                "14db9de7.dc1802"
            ]
        ]
    },
    {
        "id": "274d8e69.700032",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/employees/clockstatus",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 185,
        "y": 585.7673578262329,
        "wires": [
            [
                "a5766f38.f6681"
            ]
        ]
    },
    {
        "id": "a5766f38.f6681",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "msg.headers = {}\nmsg.token = global.get('humanity').token\nmsg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\nmsg.redirect = false\nmsg.payload = global.get( msg.payload.username)\nvar username = msg.payload.username\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 580,
        "wires": [
            [
                "17a92fcc.3de4e"
            ]
        ]
    },
    {
        "id": "925f121a.70f56",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 580,
        "wires": []
    },
    {
        "id": "14db9de7.dc1802",
        "type": "change",
        "z": "b7b775e0.9589b8",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "925f121a.70f56"
            ]
        ]
    },
    {
        "id": "b1dbbbe4.b30ab8",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "clock in",
        "method": "POST",
        "ret": "obj",
        "url": "https://www.humanity.com/api/v2/employees/{{{id}}}/clockin?access_token={{{token}}}",
        "tls": "",
        "x": 880,
        "y": 660,
        "wires": [
            [
                "5f351aa5.5b7a14"
            ]
        ]
    },
    {
        "id": "b469ec11.76db7",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/employees/clock",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 680,
        "wires": [
            [
                "5abed814.929f78"
            ]
        ]
    },
    {
        "id": "5f351aa5.5b7a14",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "6373b207.0376bc",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/employees/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "aa3b7054.595ec"
            ]
        ]
    },
    {
        "id": "6d196626.5ed558",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "clock out",
        "method": "PUT",
        "ret": "obj",
        "url": "https://www.humanity.com/api/v2/employees/4041624/clockout?access_token={{{token}}}",
        "tls": "",
        "x": 540,
        "y": 760,
        "wires": [
            [
                "4e2f68ad.97d648"
            ]
        ]
    },
    {
        "id": "b808d774.42add8",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/employees/clockout",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 753.7569427490234,
        "wires": [
            [
                "a12b026c.e148a"
            ]
        ]
    },
    {
        "id": "a12b026c.e148a",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "// msg.headers = {}\nmsg.token = global.get('humanity').token\n// msg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\nmsg.redirect = false\nmsg.payload = global.get( msg.payload.username)\nvar username = msg.payload.username\nreturn msg;\n\n// msg.headers = {}\n\n// msg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\n// msg.redirect = false\n// msg.token =  global.get('humanity').token\n// // msg.id = msg.payload.id\n// console.log(msg.payload.id)\n// var username = msg.payload.username\n// console.log(username)\n// msg.payload = {\n//     key: \"userId\",\n//     reservedKey: \"username\",\n//     value: username,\n//     operator: \"=\"\n// }\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 760,
        "wires": [
            [
                "6d196626.5ed558"
            ]
        ]
    },
    {
        "id": "4e2f68ad.97d648",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 760,
        "wires": []
    },
    {
        "id": "b81106a2.c3cff8",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "time clocks",
        "method": "GET",
        "ret": "obj",
        "url": "http://www.humanity.com/api/v2/timeclocks/status/{{{payload.humanityid}}}/0?access_token={{{token}}}",
        "tls": "",
        "x": 530,
        "y": 680,
        "wires": [
            [
                "bf034636.95b0b8"
            ]
        ]
    },
    {
        "id": "5abed814.929f78",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "msg.headers = {}\nmsg.token = global.get('humanity').token\nmsg.headers[\"content-type\"] = 'application/x-www-form-urlencoded' //should be set to application/x-www-form-urlencoded.\nmsg.redirect = false\nmsg.uname = msg.payload.username\nmsg.payload = global.get( msg.payload.username)\nmsg.id = global.get( msg.payload.username).humanityid\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 680,
        "wires": [
            [
                "b81106a2.c3cff8"
            ]
        ]
    },
    {
        "id": "bf034636.95b0b8",
        "type": "switch",
        "z": "b7b775e0.9589b8",
        "name": "",
        "property": "payload.data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "in",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 680,
        "wires": [
            [
                "b1dbbbe4.b30ab8"
            ],
            [
                "14cbbb9.6ec3144"
            ]
        ]
    },
    {
        "id": "14cbbb9.6ec3144",
        "type": "http request",
        "z": "b7b775e0.9589b8",
        "name": "clock out",
        "method": "PUT",
        "ret": "obj",
        "url": "https://www.humanity.com/api/v2/employees/{{{payload.humanityid}}}/clockout?access_token={{{token}}}",
        "tls": "",
        "x": 880,
        "y": 700,
        "wires": [
            [
                "68bfb194.51673"
            ]
        ]
    },
    {
        "id": "68bfb194.51673",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "3803f0a5.464b5",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/api/putprofiles",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "1c692060.5bf0b",
                "1f8e83fe.836b7c"
            ]
        ]
    },
    {
        "id": "1c692060.5bf0b",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "profiles inserted",
        "statusCode": "",
        "headers": {},
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "889bd60c.2ed098",
        "type": "http in",
        "z": "b7b775e0.9589b8",
        "name": "",
        "url": "/api/getprofiles",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "20273337.7d769c"
            ]
        ]
    },
    {
        "id": "70ead7f9.ddaf18",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "return profiles",
        "statusCode": "",
        "headers": {},
        "x": 620,
        "y": 380,
        "wires": []
    },
    {
        "id": "550e98d6.a000a8",
        "type": "function",
        "z": "137a9152.2c26cf",
        "name": "ash",
        "func": "msg.headers = {}\nconst token = global.get('snipeit_token')\nmsg.headers['Accept'] = 'application/json'\nmsg.headers[\"Authorization\"] = 'Bearer '+ token\nmsg.redirect = false\nmsg.snipeit_host = global.get('snipeit_host')\nmsg.mock = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "e5b142d9.61aae"
            ]
        ]
    },
    {
        "id": "e5b142d9.61aae",
        "type": "http request",
        "z": "137a9152.2c26cf",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{snipeit_host}}}/hardware",
        "tls": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "49161f60.901c5"
            ]
        ]
    },
    {
        "id": "37172944.559d96",
        "type": "function",
        "z": "137a9152.2c26cf",
        "name": "set snipeit shit",
        "func": "global.set('snipeit_token', 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQ0ODQ5ZmVjYmQ3YTBiNWUxMjg4MzUzMjZkZjdkNDM0ZjA1YjVmNWVmZjM0MWQ3NTVjM2NmMGVhODIxODNjNjAyNWQ4NWE4OTE2ZWNiMjlmIn0.eyJhdWQiOiIxIiwianRpIjoiNDQ4NDlmZWNiZDdhMGI1ZTEyODgzNTMyNmRmN2Q0MzRmMDViNWY1ZWZmMzQxZDc1NWMzY2YwZWE4MjE4M2M2MDI1ZDg1YTg5MTZlY2IyOWYiLCJpYXQiOjE1MjgzMDkyMDgsIm5iZiI6MTUyODMwOTIwOCwiZXhwIjoxNTU5ODQ1MjA4LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.yv1QL0Vbf4EupDdI-9U6somSbALryrk5UXX5cMV_iNILSye7rKqruoLurDghzt6-2PboAHffoiWnBGRp36vdJ5oUTNKWPSYl-PQqLkDVWjinpcQ0jHZM75lLausxkIknDi4bFlXPgWHtewotLUQKdDW-Nkij6EckVUZbn2lOFw2bi2HOGzENVl7H8VHaBXlQw_cBpT7w4K1FaHkYE2qECK-B2GZ0VlVw3sBDESbyT0sb-HRzt-6R1icItzMHUXz0sbJox3LyfGJ3X4Z3-_tKk3mxd9TXldWf7HTdk5d65r9YBCl770Ha1rAKhwyGGvMU6jBfQemGcklzooivRfVjzhRD5BlpJNqus7NquyEYacPdmm7A4Tp3bbzyxNeh_7jlVjqsf7CrWy78nFUdrrtE6gBavMwAz8AE7FScH6NzMjCekTU-pvEuUjEmTwj5p_NCUt8Yjwo9u66UzlgVf45wsG3qngL50D097rTzdA97-XGlt-csbZ_m7v2lJXNjR0yxM29aNFQBnui7RLd0_mAtoP41WtXMNlsLL9uaD3wK2tpcpoZViRWPYeg9gs81goMTzQ0ct370urdwkuNwNMvX5N1yljJIShgXnk75EP6YscOdmvR5FrlLm_5b07k7Ywwd9ZfbuaT9RI6YeUruSlH6-fGeH3Q37Gui1i4QSU5M5uc')\nglobal.set('snipeit_host', 'http://52.39.121.124:8080/api/v1')\n\n\nmsg.headers = {}\nconst token = global.get('snipeit_token')\nmsg.headers['Accept'] = 'application/json'\nmsg.headers[\"Authorization\"] = 'Bearer '+ token\nmsg.redirect = false\nmsg.snipeit_host = global.get('snipeit_host')\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "a7b02b70.660408"
            ]
        ]
    },
    {
        "id": "9d1c79ad.1372a8",
        "type": "inject",
        "z": "137a9152.2c26cf",
        "name": "Hardware Startup",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "37172944.559d96"
            ]
        ]
    },
    {
        "id": "49161f60.901c5",
        "type": "http response",
        "z": "137a9152.2c26cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "9acf09d0.5dccd8",
        "type": "http in",
        "z": "137a9152.2c26cf",
        "name": "",
        "url": "/api/assets/hardwarelist",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "550e98d6.a000a8"
            ]
        ]
    },
    {
        "id": "be0f2f96.c35dc",
        "type": "DataIn",
        "z": "137a9152.2c26cf",
        "collection": "8c5fc8f9.567368",
        "name": "/assets/checkedoutlist",
        "update": false,
        "path": "/assets/checkedoutlist",
        "x": 860,
        "y": 40,
        "wires": []
    },
    {
        "id": "a7b02b70.660408",
        "type": "http request",
        "z": "137a9152.2c26cf",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "{{{snipeit_host}}}/hardware?status=Deployed",
        "tls": "",
        "x": 630,
        "y": 40,
        "wires": [
            [
                "be0f2f96.c35dc"
            ]
        ]
    },
    {
        "id": "2695857d.54434a",
        "type": "websocket out",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "server": "a56be3a0.bbc3e",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "a0d11838.518478",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "func": "// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\ncontext.global.location = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 441,
        "y": 214,
        "wires": [
            [
                "2695857d.54434a"
            ]
        ]
    },
    {
        "id": "eb331716.32f5c8",
        "type": "websocket in",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "server": "a56be3a0.bbc3e",
        "x": 270,
        "y": 274,
        "wires": [
            [
                "d76fc4eb.eafce8"
            ]
        ]
    },
    {
        "id": "d76fc4eb.eafce8",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "func": "// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n\nmsg.payload = context.global.location;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 443,
        "y": 280,
        "wires": [
            [
                "2695857d.54434a"
            ]
        ]
    },
    {
        "id": "33ccc697.c4a3aa",
        "type": "template",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Owntracks & Node-Red Live Map</title>\n  <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n  <script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=true\"></script>\n  <script type=\"text/javascript\" src=\"http://yourjavascript.com/4594301102/gmaps.js\"></script>\n \n  <style type=\"text/css\" media=\"screen\">\n    #map {\n      position:absolute;\n      top: 0; bottom: 0; left: 0; right: 0;\n    }\n  </style>\n</head>\n<body>\n \n  <div id=\"map\"></div>\n  <script type=\"text/javascript\">\n  var socketaddy = \"ws://192.168.0.5:1880/ws/location\";\n    var map;\n    var sock;\n    $(document).ready(function(){\n      \n      map = new GMaps({\n        div: '#map',\n        lat: -12.043333,\n        lng: -77.028333\n      });\n      \n      \n      sock = new WebSocket(socketaddy);\n      sock.onopen = function(){ console.log(\"Connected websocket\");\n\t      console.log(\"Sending ping..\");\n\t      sock.send(\"Ping!\");\n\t      console.log(\"Ping sent..\");\n      };\n      sock.onerror = function(){ console.log(\"Websocket error\"); };\n      sock.onmessage = function(evt){\n        var latlng = JSON.parse(evt.data);\n        var array = $.map(latlng, function(el) {\n  \t\t\treturn [[el.lat, el.lng]];\n\t\t\t});\n        \n        map.removeMarkers();\n        map.removePolylines();\n       \tconsole.log(\"Got marker at \" + latlng[0].lat + \", \" + latlng[0].lng, latlng);\n        map.setZoom(17);\n       \tmap.setCenter(latlng[0].lat, latlng[0].lng);\n        map.addMarkers(latlng);\n      \tmap.drawPolyline({\n\t\t  path: array,\n\t\t  strokeColor: '#131540',\n\t\t  strokeOpacity: 0.6,\n\t\t  strokeWeight: 6\n\t\t});\n      }\n    });\n  </script>\n</body>\n</html>",
        "x": 473,
        "y": 351,
        "wires": [
            [
                "c2fa4a3b.5d1478"
            ]
        ]
    },
    {
        "id": "c2fa4a3b.5d1478",
        "type": "http response",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "x": 657,
        "y": 351,
        "wires": []
    },
    {
        "id": "1ef4f2ea.da18cd",
        "type": "http in",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "url": "/map",
        "method": "get",
        "x": 252,
        "y": 356,
        "wires": [
            [
                "33ccc697.c4a3aa"
            ]
        ]
    },
    {
        "id": "9fa85e4f.7d432",
        "type": "inject",
        "z": "5d4e82a1.6b341c",
        "name": "Array of Co-ords",
        "topic": "",
        "payload": "[{\"lat\":54.9619349,\"lng\":-1.6003813},{\"lat\":54.9656694,\"lng\":-1.5239833},{\"lat\":54.9696456,\"lng\":-1.5069755},{\"lat\":54.9378907,\"lng\":-1.5273729}]",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 223,
        "y": 163,
        "wires": [
            [
                "a0d11838.518478"
            ]
        ]
    },
    {
        "id": "a2f654cc.f99958",
        "type": "inject",
        "z": "5d4e82a1.6b341c",
        "name": "Single Co-ord",
        "topic": "",
        "payload": "[{\"lat\":54.9696456,\"lng\":-1.5069755}]",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 213,
        "y": 209,
        "wires": [
            [
                "a0d11838.518478"
            ]
        ]
    },
    {
        "id": "58e62f21.3b307",
        "type": "delay",
        "z": "b7b775e0.9589b8",
        "name": "",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1110,
        "y": 60,
        "wires": [
            [
                "793017a8.a454b8"
            ]
        ]
    },
    {
        "id": "aa3b7054.595ec",
        "type": "http response",
        "z": "b7b775e0.9589b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "f3c8deff.995e6",
        "type": "http in",
        "z": "5c46ad63.1c5eb4",
        "name": "",
        "url": "/api/putconsumables",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "1382683f.a960a8",
                "1840f107.00ae0f"
            ]
        ]
    },
    {
        "id": "1382683f.a960a8",
        "type": "http response",
        "z": "5c46ad63.1c5eb4",
        "name": "consumables inserted",
        "statusCode": "",
        "headers": {},
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "af812918.496f28",
        "type": "http in",
        "z": "5c46ad63.1c5eb4",
        "name": "",
        "url": "/api/getconsumables",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "a4098363.5310c"
            ]
        ]
    },
    {
        "id": "adf34893.163aa8",
        "type": "http response",
        "z": "5c46ad63.1c5eb4",
        "name": "return consumables",
        "statusCode": "",
        "headers": {},
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "51a05d1a.69ed94",
        "type": "ibmiot in",
        "z": "5d4e82a1.6b341c",
        "authentication": "apiKey",
        "apiKey": "2d25d467.3a0ffc",
        "inputType": "evt",
        "logicalInterface": "",
        "ruleId": "",
        "deviceId": "",
        "applicationId": "",
        "deviceType": "+Tablets",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "IBM IoT",
        "service": "registered",
        "allDevices": "",
        "allApplications": "",
        "allDeviceTypes": true,
        "allLogicalInterfaces": "",
        "allEvents": "",
        "allCommands": "",
        "allFormats": "",
        "qos": 0,
        "x": 50,
        "y": 580,
        "wires": [
            [
                "7775d5b1.7ddc6c"
            ]
        ]
    },
    {
        "id": "74148642.9ebb98",
        "type": "http in",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "url": "/api/getowntracks",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "813b771c.a90728"
            ]
        ]
    },
    {
        "id": "985c2707.88e948",
        "type": "http response",
        "z": "5d4e82a1.6b341c",
        "name": "return owntracks",
        "statusCode": "",
        "headers": {},
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "bdeec8a1.02ba28",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "ash2",
        "func": "// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\nvar now = Date();\nvar message = \"\";\ndata = JSON.parse(msg.payload);\n\nif ( (data._type == \"location\") && (data.event != undefined ) ) {\n\t\n\t\tif ( data.event == \"enter\" ) {\t\t\t\n\t\t\tmessage = \"Entering Location: \";\n\t\t} else {\n\t\t\tmessage = \"Leaving Location: \";\n\t\t}\n\t\t\n\t\tif ( data.desc != undefined ) {\n\t\t\t// Shared waypoint, comes with a description:\n\t\t\t\tmessage += data.desc;\n \t\t} else {\n \t\t\t// No description is set, non shared \"private\" waypoint\n \t\t\t\tmessage += data.lat + \",\" + data.lon;\n \t\t}\n }\n\nmsg.payload = message;\n//console.log(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 331,
        "y": 745,
        "wires": [
            [
                "b6452882.0f56a8"
            ]
        ]
    },
    {
        "id": "b6452882.0f56a8",
        "type": "switch",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "property": "payload",
        "rules": [
            {
                "t": "cont",
                "v": "Location"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 492,
        "y": 745,
        "wires": [
            []
        ]
    },
    {
        "id": "115b5eaa.3cb121",
        "type": "inject",
        "z": "5d4e82a1.6b341c",
        "name": "Test Shared Waypoint",
        "topic": "",
        "payload": "{\"_type\": \"location\", \"lat\": \"xxxx\", \"lon\": \"yyyy\", \"tst\": \"1391715492\", \"acc\": \"500.0\", \"batt\": \"48\", \"desc\": \"Shared Test Waypoint\", \"event\": \"enter\"}",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 136,
        "y": 745,
        "wires": [
            [
                "bdeec8a1.02ba28"
            ]
        ]
    },
    {
        "id": "a3e18473.5e4b78",
        "type": "inject",
        "z": "5d4e82a1.6b341c",
        "name": "Test Private Waypoint",
        "topic": "",
        "payload": "{\"_type\": \"location\", \"lat\": \"xxxx\", \"lon\": \"yyyy\", \"tst\": \"1391715492\", \"acc\": \"500.0\", \"batt\": \"48\", \"event\": \"enter\"}",
        "payloadType": "string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 135,
        "y": 810,
        "wires": [
            [
                "bdeec8a1.02ba28"
            ]
        ]
    },
    {
        "id": "7775d5b1.7ddc6c",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "convert owntracks to usable",
        "func": "msg.locationdata = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 580,
        "wires": [
            [
                "5ed41002.fcfc3"
            ]
        ]
    },
    {
        "id": "d677a9fe.eca248",
        "type": "filter",
        "z": "5d4e82a1.6b341c",
        "name": "filter for right",
        "property": "payload.rows",
        "propertyType": "msg",
        "asArray": true,
        "itemProperty": "custom_fields",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "eq",
                "v": "locationdata.tid",
                "vt": "msg",
                "output": 1
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 930,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5ed41002.fcfc3",
        "type": "DataOut",
        "z": "5d4e82a1.6b341c",
        "collection": "8c5fc8f9.567368",
        "name": "/assets/checkedoutlist",
        "path": "/assets/checkedoutlist",
        "error": false,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "78e70830.d585d8"
            ]
        ]
    },
    {
        "id": "aebc4c6a.72dc",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "func": "\n                        // var msg = JSON.parse(message.toString())\n    node.warn(msg.locationdata)\n    if (msg.locationdata._type === \"location\") {\n        var event = {};\n        event.loc = {};\n        event.loc.type = \"Point\";\n        event.loc.coordinates = [parseFloat(msg.locationdata.lon), parseFloat(msg.locationdata.lat)];\n        event.alt = parseFloat(msg.locationdata.alt || 0);\n        if (msg.locationdata.acc !== undefined) {\n            event.acc = parseFloat(msg.locationdata.acc);\n        }\n        event.batt = parseFloat(msg.locationdata.batt || 100);\n        if (msg.locationdata.cog !== undefined) {\n            event.cog = parseFloat(msg.locationdata.cog);\n        }\n             if (msg.locationdata.conn !== undefined) {\n            event.conn = parseFloat(msg.locationdata.conn);\n        }\n        if (msg.locationdata.desc !== undefined) {\n            event.desc = msg.locationdata.desc;\n        }\n        if (msg.locationdata.rad !== undefined) {\n            event.rad = parseFloat(msg.locationdata.rad);\n        }\n        if (msg.locationdata.t !== undefined) {\n            event.t = msg.locationdata.t;\n        }\n        if (msg.locationdata.tid !== undefined) {\n            event.tid = msg.locationdata.tid;\n        }\n        event.ts = new Date(parseInt(msg.locationdata.tst, 10) * 1000);\n        if (msg.locationdata.vacc !== undefined) {\n            event.vacc = parseFloat(msg.locationdata.vacc);\n        }\n        if (msg.locationdata.vel !== undefined) {\n            event.vel = parseFloat(msg.locationdata.vel);\n        }\n    //    collection.update({topic: topic}, {$addToSet: {events: event}}, {upsert: true, w:0});\n    event.assigned_to = msg.locationdata.assigned_to \n    node.warn(event)\n    msg.payload = event\n    \nreturn msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "6e1b5343.d1c43c"
            ]
        ]
    },
    {
        "id": "1f8e83fe.836b7c",
        "type": "cloudant out",
        "z": "b7b775e0.9589b8",
        "name": "insert profile",
        "cloudant": "8ab126de.c9de68",
        "database": "profiles",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "successOutput": false,
        "x": 390,
        "y": 280,
        "wires": []
    },
    {
        "id": "20273337.7d769c",
        "type": "cloudant in",
        "z": "b7b775e0.9589b8",
        "name": "get all profiles",
        "cloudant": "8ab126de.c9de68",
        "database": "profiles",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 380,
        "y": 380,
        "wires": [
            [
                "70ead7f9.ddaf18"
            ]
        ]
    },
    {
        "id": "793017a8.a454b8",
        "type": "cloudant out",
        "z": "b7b775e0.9589b8",
        "name": "insert profile",
        "cloudant": "8ab126de.c9de68",
        "database": "profiles",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "successOutput": false,
        "x": 1330,
        "y": 60,
        "wires": []
    },
    {
        "id": "a4098363.5310c",
        "type": "cloudant in",
        "z": "5c46ad63.1c5eb4",
        "name": "get all consumables",
        "cloudant": "8ab126de.c9de68",
        "database": "consumables",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "adf34893.163aa8"
            ]
        ]
    },
    {
        "id": "1840f107.00ae0f",
        "type": "cloudant out",
        "z": "5c46ad63.1c5eb4",
        "name": "insert consumables",
        "cloudant": "8ab126de.c9de68",
        "database": "consumables",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "successOutput": false,
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "6e1b5343.d1c43c",
        "type": "cloudant out",
        "z": "5d4e82a1.6b341c",
        "name": "insert owntracks",
        "cloudant": "8ab126de.c9de68",
        "database": "owntracks",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "successOutput": false,
        "x": 1240,
        "y": 580,
        "wires": []
    },
    {
        "id": "78e70830.d585d8",
        "type": "function",
        "z": "5d4e82a1.6b341c",
        "name": "match checkoutlist to owntracks",
        "func": "var assetList = msg.payload.rows\nfor (var asset of msg.payload.rows) {\n    node.warn(asset.custom_fields.tid.value)\n    node.warn(msg.locationdata)\n    if (msg.locationdata.tid == asset.custom_fields.tid.value) {\n        msg.locationdata.assigned_to = {}\n        msg.locationdata.assigned_to.id = asset.assigned_to.id\n        msg.locationdata.assigned_to.username = asset.assigned_to.username\n        msg.payload = msg.locationdata\n        return [null, msg]\n    }\n}\nmsg.payload.status = 'error'\nmsg.payload.value = 404\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "69e8cad7.2c3b24"
            ],
            [
                "aebc4c6a.72dc"
            ]
        ],
        "outputLabels": [
            "not_found",
            "found"
        ]
    },
    {
        "id": "813b771c.a90728",
        "type": "cloudant in",
        "z": "5d4e82a1.6b341c",
        "name": "get all owntracks",
        "cloudant": "8ab126de.c9de68",
        "database": "owntracks",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 350,
        "y": 500,
        "wires": [
            [
                "985c2707.88e948"
            ]
        ]
    },
    {
        "id": "69e8cad7.2c3b24",
        "type": "debug",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "5576fb8a.eacbb4",
        "type": "inject",
        "z": "5d4e82a1.6b341c",
        "name": "",
        "topic": "",
        "payload": "{\"_type\":\"location\",\"tid\":\"04\",\"acc\":21,\"batt\":100,\"conn\":\"w\",\"lat\":32.31732,\"lon\":-95.2474271,\"t\":\"u\",\"tst\":1528658302}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 230,
        "y": 640,
        "wires": [
            [
                "7775d5b1.7ddc6c"
            ]
        ]
    },
    {
        "id": "739820ae.40e28",
        "type": "process-env",
        "z": "b7b775e0.9589b8",
        "name": "",
        "into": "payload",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "8f06bf17.ad0f"
            ]
        ]
    },
    {
        "id": "94b1e803.ed0f28",
        "type": "inject",
        "z": "b7b775e0.9589b8",
        "name": "Employees Startup",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "26a83d32.c7f4e2",
                "739820ae.40e28"
            ]
        ]
    },
    {
        "id": "454015d0.f92bfc",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "global.set('profiles', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "26a83d32.c7f4e2",
        "type": "cloudant in",
        "z": "b7b775e0.9589b8",
        "name": "get all profiles",
        "cloudant": "8ab126de.c9de68",
        "database": "profiles",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 320,
        "y": 60,
        "wires": [
            [
                "454015d0.f92bfc"
            ]
        ]
    },
    {
        "id": "8f06bf17.ad0f",
        "type": "function",
        "z": "b7b775e0.9589b8",
        "name": "",
        "func": "global.set('env', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "69118488.68271c",
        "type": "http in",
        "z": "137a9152.2c26cf",
        "name": "",
        "url": "/api/assets/checkouthardware",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "180c1461.f0fddc"
            ]
        ]
    },
    {
        "id": "d2258d3c.47e7d",
        "type": "http in",
        "z": "137a9152.2c26cf",
        "name": "",
        "url": "/api/assets/checkinhardware",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "737e30c.0ff23d"
            ]
        ]
    },
    {
        "id": "180c1461.f0fddc",
        "type": "function",
        "z": "137a9152.2c26cf",
        "name": "checkouthardware",
        "func": "msg.headers = {}\nvar msg2 = msg\nconst token = global.get('snipeit_token')\nmsg.headers['Accept'] = 'application/json'\nmsg.headers[\"Authorization\"] = 'Bearer '+ token\nmsg.redirect = false\nmsg.assetId = msg.payload.assetId\nmsg.username = msg.payload.username\nmsg.username = msg.payload.username\nnode.warn(msg.username)\nmsg.snipeit_host = global.get('snipeit_host')\n// msg.profiles = global.get('profiles')\n\nfor(var profile of global.get('profiles')){\n    if(msg.username == profile.SnipeItUsername){\n        node.warn('gotcha')\n        msg.userId = profile.snipeitId\n        return [null, msg]\n    }\n}\nmsg.status = 404\nreturn [msg, null]",
        "outputs": 2,
        "noerr": 0,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "98477825.2ccc98"
            ],
            [
                "b17e315f.29223"
            ]
        ]
    },
    {
        "id": "a4b822e9.c48eb",
        "type": "http response",
        "z": "137a9152.2c26cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "737e30c.0ff23d",
        "type": "function",
        "z": "137a9152.2c26cf",
        "name": "checkinhardware",
        "func": "msg.headers = {}\nconst token = global.get('snipeit_token')\nmsg.headers['Accept'] = 'application/json'\nmsg.headers[\"Authorization\"] = 'Bearer '+ token\nmsg.redirect = false\nconsole.log(msg.payload.assetId)\nmsg.id = msg.payload.assetId\nmsg.snipeit_host = global.get('snipeit_host')\n\n console.log(msg.id)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "4e434438.3472fc"
            ]
        ]
    },
    {
        "id": "b17e315f.29223",
        "type": "http request",
        "z": "137a9152.2c26cf",
        "name": "get checkedout",
        "method": "POST",
        "ret": "obj",
        "url": "{{{snipeit_host}}}/hardware/{{{assetId}}}/checkout?assigned_user={{{userId}}}&checkout_to_type=user",
        "tls": "",
        "x": 660,
        "y": 280,
        "wires": [
            [
                "a4b822e9.c48eb",
                "c6a74072.06cb7"
            ]
        ]
    },
    {
        "id": "4e434438.3472fc",
        "type": "http request",
        "z": "137a9152.2c26cf",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "{{{snipeit_host}}}/hardware/{{{id}}}/checkin",
        "tls": "",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "e01fc672.86d078",
                "c6a74072.06cb7"
            ]
        ]
    },
    {
        "id": "e01fc672.86d078",
        "type": "http response",
        "z": "137a9152.2c26cf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7c29966.528858",
        "type": "inject",
        "z": "137a9152.2c26cf",
        "name": "",
        "topic": "",
        "payload": "{\"assetId\":\"1\", \"username\":\"ash\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "180c1461.f0fddc"
            ]
        ]
    },
    {
        "id": "c80a029e.adfec",
        "type": "DataOut",
        "z": "137a9152.2c26cf",
        "collection": "8c5fc8f9.567368",
        "name": "/assets/checkedoutlist",
        "path": "/assets/checkedoutlist",
        "error": false,
        "x": 1340,
        "y": 340,
        "wires": [
            [
                "1e3c6833.3907c8"
            ]
        ]
    },
    {
        "id": "c6a74072.06cb7",
        "type": "switch",
        "z": "137a9152.2c26cf",
        "name": "checkout/in success?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 340,
        "wires": [
            [
                "4e6c5d5e.4fc9f4"
            ],
            []
        ]
    },
    {
        "id": "4e6c5d5e.4fc9f4",
        "type": "http request",
        "z": "137a9152.2c26cf",
        "name": "?status=Deployed",
        "method": "GET",
        "ret": "obj",
        "url": "{{{snipeit_host}}}/hardware",
        "tls": "",
        "x": 1130,
        "y": 340,
        "wires": [
            [
                "c80a029e.adfec"
            ]
        ]
    },
    {
        "id": "77c0bcdc.211284",
        "type": "inject",
        "z": "137a9152.2c26cf",
        "name": "",
        "topic": "",
        "payload": "{\"assetId\":\"1\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "737e30c.0ff23d"
            ]
        ]
    },
    {
        "id": "1e3c6833.3907c8",
        "type": "debug",
        "z": "137a9152.2c26cf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1330,
        "y": 300,
        "wires": []
    },
    {
        "id": "98477825.2ccc98",
        "type": "debug",
        "z": "137a9152.2c26cf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 240,
        "wires": []
    }
]